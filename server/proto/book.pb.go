// Code generated by protoc-gen-go. DO NOT EDIT.
// source: book.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Grouping int32

const (
	Grouping_NONE  Grouping = 0
	Grouping_HOUR  Grouping = 1
	Grouping_DAY   Grouping = 2
	Grouping_WEEK  Grouping = 3
	Grouping_MONTH Grouping = 4
	Grouping_YEAR  Grouping = 5
)

var Grouping_name = map[int32]string{
	0: "NONE",
	1: "HOUR",
	2: "DAY",
	3: "WEEK",
	4: "MONTH",
	5: "YEAR",
}
var Grouping_value = map[string]int32{
	"NONE":  0,
	"HOUR":  1,
	"DAY":   2,
	"WEEK":  3,
	"MONTH": 4,
	"YEAR":  5,
}

func (x Grouping) String() string {
	return proto.EnumName(Grouping_name, int32(x))
}
func (Grouping) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_book_5eb76ba784e84018, []int{0}
}

type Book struct {
	Guid                 string       `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Grouping             Grouping     `protobuf:"varint,3,opt,name=grouping,proto3,enum=captainslog.Grouping" json:"grouping,omitempty"`
	Extractor            []*Extractor `protobuf:"bytes,4,rep,name=extractor,proto3" json:"extractor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Book) Reset()         { *m = Book{} }
func (m *Book) String() string { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()    {}
func (*Book) Descriptor() ([]byte, []int) {
	return fileDescriptor_book_5eb76ba784e84018, []int{0}
}
func (m *Book) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Book.Unmarshal(m, b)
}
func (m *Book) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Book.Marshal(b, m, deterministic)
}
func (dst *Book) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Book.Merge(dst, src)
}
func (m *Book) XXX_Size() int {
	return xxx_messageInfo_Book.Size(m)
}
func (m *Book) XXX_DiscardUnknown() {
	xxx_messageInfo_Book.DiscardUnknown(m)
}

var xxx_messageInfo_Book proto.InternalMessageInfo

func (m *Book) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *Book) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Book) GetGrouping() Grouping {
	if m != nil {
		return m.Grouping
	}
	return Grouping_NONE
}

func (m *Book) GetExtractor() []*Extractor {
	if m != nil {
		return m.Extractor
	}
	return nil
}

func init() {
	proto.RegisterType((*Book)(nil), "captainslog.Book")
	proto.RegisterEnum("captainslog.Grouping", Grouping_name, Grouping_value)
}

func init() { proto.RegisterFile("book.proto", fileDescriptor_book_5eb76ba784e84018) }

var fileDescriptor_book_5eb76ba784e84018 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xca, 0xcf, 0xcf,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4e, 0x2c, 0x28, 0x49, 0xcc, 0xcc, 0x2b,
	0xce, 0xc9, 0x4f, 0x97, 0xe2, 0x4f, 0xad, 0x28, 0x29, 0x4a, 0x4c, 0x2e, 0xc9, 0x2f, 0x82, 0xc8,
	0x2a, 0x4d, 0x67, 0xe4, 0x62, 0x71, 0xca, 0xcf, 0xcf, 0x16, 0x12, 0xe2, 0x62, 0x49, 0x2f, 0xcd,
	0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x41, 0x62, 0x79, 0x89, 0xb9, 0xa9,
	0x12, 0x4c, 0x10, 0x31, 0x10, 0x5b, 0xc8, 0x90, 0x8b, 0x23, 0xbd, 0x28, 0xbf, 0xb4, 0x20, 0x33,
	0x2f, 0x5d, 0x82, 0x59, 0x81, 0x51, 0x83, 0xcf, 0x48, 0x54, 0x0f, 0xc9, 0x06, 0x3d, 0x77, 0xa8,
	0x64, 0x10, 0x5c, 0x99, 0x90, 0x09, 0x17, 0x27, 0xdc, 0x5a, 0x09, 0x16, 0x05, 0x66, 0x0d, 0x6e,
	0x23, 0x31, 0x14, 0x3d, 0xae, 0x30, 0xd9, 0x20, 0x84, 0x42, 0x2d, 0x37, 0x2e, 0x0e, 0x98, 0x59,
	0x42, 0x1c, 0x5c, 0x2c, 0x7e, 0xfe, 0x7e, 0xae, 0x02, 0x0c, 0x20, 0x96, 0x87, 0x7f, 0x68, 0x90,
	0x00, 0xa3, 0x10, 0x3b, 0x17, 0xb3, 0x8b, 0x63, 0xa4, 0x00, 0x13, 0x48, 0x28, 0xdc, 0xd5, 0xd5,
	0x5b, 0x80, 0x59, 0x88, 0x93, 0x8b, 0xd5, 0xd7, 0xdf, 0x2f, 0xc4, 0x43, 0x80, 0x05, 0x24, 0x18,
	0xe9, 0xea, 0x18, 0x24, 0xc0, 0xea, 0xc4, 0x1e, 0xc5, 0x0a, 0xf6, 0x6a, 0x12, 0x1b, 0x98, 0x32,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x25, 0x66, 0x1c, 0xbd, 0x1d, 0x01, 0x00, 0x00,
}
