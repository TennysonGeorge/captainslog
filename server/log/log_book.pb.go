// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log_book.proto

package log

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Grouping int32

const (
	Grouping_NONE  Grouping = 0
	Grouping_HOUR  Grouping = 1
	Grouping_DAY   Grouping = 2
	Grouping_WEEK  Grouping = 3
	Grouping_MONTH Grouping = 4
	Grouping_YEAR  Grouping = 5
)

var Grouping_name = map[int32]string{
	0: "NONE",
	1: "HOUR",
	2: "DAY",
	3: "WEEK",
	4: "MONTH",
	5: "YEAR",
}
var Grouping_value = map[string]int32{
	"NONE":  0,
	"HOUR":  1,
	"DAY":   2,
	"WEEK":  3,
	"MONTH": 4,
	"YEAR":  5,
}

func (x Grouping) String() string {
	return proto.EnumName(Grouping_name, int32(x))
}
func (Grouping) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_log_book_915e5def4ed1fe27, []int{0}
}

type LogBook struct {
	Guid                 string       `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Grouping             Grouping     `protobuf:"varint,3,opt,name=grouping,proto3,enum=log.Grouping" json:"grouping,omitempty"`
	Extractor            []*Extractor `protobuf:"bytes,4,rep,name=extractor,proto3" json:"extractor,omitempty"`
	LogGroup             []*LogGroup  `protobuf:"bytes,5,rep,name=log_group,json=logGroup,proto3" json:"log_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LogBook) Reset()         { *m = LogBook{} }
func (m *LogBook) String() string { return proto.CompactTextString(m) }
func (*LogBook) ProtoMessage()    {}
func (*LogBook) Descriptor() ([]byte, []int) {
	return fileDescriptor_log_book_915e5def4ed1fe27, []int{0}
}
func (m *LogBook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogBook.Unmarshal(m, b)
}
func (m *LogBook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogBook.Marshal(b, m, deterministic)
}
func (dst *LogBook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogBook.Merge(dst, src)
}
func (m *LogBook) XXX_Size() int {
	return xxx_messageInfo_LogBook.Size(m)
}
func (m *LogBook) XXX_DiscardUnknown() {
	xxx_messageInfo_LogBook.DiscardUnknown(m)
}

var xxx_messageInfo_LogBook proto.InternalMessageInfo

func (m *LogBook) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *LogBook) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogBook) GetGrouping() Grouping {
	if m != nil {
		return m.Grouping
	}
	return Grouping_NONE
}

func (m *LogBook) GetExtractor() []*Extractor {
	if m != nil {
		return m.Extractor
	}
	return nil
}

func (m *LogBook) GetLogGroup() []*LogGroup {
	if m != nil {
		return m.LogGroup
	}
	return nil
}

func init() {
	proto.RegisterType((*LogBook)(nil), "log.LogBook")
	proto.RegisterEnum("log.Grouping", Grouping_name, Grouping_value)
}

func init() { proto.RegisterFile("log_book.proto", fileDescriptor_log_book_915e5def4ed1fe27) }

var fileDescriptor_log_book_915e5def4ed1fe27 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xdd, 0x6e, 0x62, 0x93, 0x11, 0xd3, 0x65, 0x4e, 0x4b, 0x4f, 0xc1, 0x53, 0x2c, 0x92,
	0x43, 0x7d, 0x82, 0x8a, 0xab, 0x05, 0x6b, 0x02, 0x8b, 0x22, 0x3d, 0x49, 0xab, 0x65, 0x28, 0x8d,
	0x9d, 0x12, 0x52, 0xf0, 0xc9, 0x7c, 0x3e, 0xd9, 0x4d, 0x93, 0xde, 0x7e, 0xbe, 0xfd, 0xf8, 0xf7,
	0x67, 0x20, 0xa9, 0x98, 0x3e, 0xd7, 0xcc, 0xbb, 0xfc, 0x50, 0x73, 0xc3, 0x28, 0x2b, 0xa6, 0xf1,
	0x68, 0xf3, 0xdb, 0xd4, 0xab, 0xaf, 0x86, 0xeb, 0x96, 0x8e, 0x47, 0xce, 0xa2, 0x9a, 0x8f, 0x87,
	0x16, 0xdc, 0xfc, 0x09, 0x18, 0x2e, 0x98, 0x1e, 0x98, 0x77, 0x88, 0x10, 0xd0, 0x71, 0xfb, 0xad,
	0x45, 0x2a, 0xb2, 0xd8, 0xfa, 0xec, 0xd8, 0x7e, 0xf5, 0xb3, 0xd1, 0x83, 0x96, 0xb9, 0x8c, 0xb7,
	0x10, 0xf9, 0x8a, 0xed, 0x9e, 0xb4, 0x4c, 0x45, 0x96, 0x4c, 0xaf, 0xf3, 0x8a, 0x29, 0x7f, 0x3e,
	0x41, 0xdb, 0x3f, 0xe3, 0x1d, 0xc4, 0xfd, 0x04, 0x1d, 0xa4, 0x32, 0xbb, 0x9a, 0x26, 0xde, 0x35,
	0x1d, 0xb5, 0x67, 0x01, 0x27, 0x10, 0xf7, 0xfb, 0x74, 0xe8, 0xed, 0xb6, 0x79, 0xc1, 0xe4, 0xcb,
	0x6d, 0x54, 0x9d, 0xd2, 0xe4, 0x09, 0xa2, 0xee, 0x3f, 0x8c, 0x20, 0x28, 0xca, 0xc2, 0xa8, 0x0b,
	0x97, 0xe6, 0xe5, 0xbb, 0x55, 0x02, 0x87, 0x20, 0x1f, 0x67, 0x4b, 0x35, 0x70, 0xe8, 0xc3, 0x98,
	0x17, 0x25, 0x31, 0x86, 0xf0, 0xb5, 0x2c, 0xde, 0xe6, 0x2a, 0x70, 0x70, 0x69, 0x66, 0x56, 0x85,
	0xeb, 0x4b, 0x7f, 0x87, 0xfb, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc6, 0xf2, 0x87, 0xcf, 0x40,
	0x01, 0x00, 0x00,
}
