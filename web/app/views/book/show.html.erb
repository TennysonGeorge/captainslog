<%= render "book/nav", :books => books, :current_book => book %>

<br>
<br>

<%= form_for(book, :url => book_entry_path(book), :method => :post) do |f| %>
  <% textarea_placeholder = t(:enter_new_log, :datetime => requested_time.to_date) %>
  <textarea name="text" rows="1" placeholder="<%= textarea_placeholder %>" class="entry-textarea"></textarea>

  <input type="hidden" name="book_id" value="<%= book.id %>" />
  <input type="hidden" name="requested_time" value="<%= requested_time.to_i %>" />

  <%= f.submit t(:submit) %>
<% end %>

<br>

<% prev_time, next_time = book.grouping_prev_next_times(requested_time) %>

<%= link_to "prev", book_at_path(book, prev_time.to_i) %>
<%= link_to "curr", book %>
<%= link_to "next", book_at_path(book, next_time.to_i) %>

<br>
<br>

<% entries.each do |entry| %>
  <div><%= entry.text %></div>
<% end %>

<script>
  // Sets up an key press event listener on the entry textarea field so that
  // pressing enter/return submits the form. This givens us the best of both
  // worlds where we can have multiline input for adding multiple entries at a
  // time and also being able to submit with pressing enter on destop and mobile.
  function setupSubmitFormOnTextareaPressEnter() {
    $("textarea[name=text]").on("keypress", function(ev) {
      if (ev.keyCode === 13) {
        $("form").submit()
        ev.preventDefault()
        return false
      }
    })
  }

  $(setupSubmitFormOnTextareaPressEnter)
</script>
