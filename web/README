Web interface for Captain's Log. This is a Rails app that handles all CRUD
operations and calls out to external services for entry processing and
querying.


=== Requirements

- Ruby 2.6.1
- PostgreSQL 10.3


=== Development

    bundle                        # install dependencies
    bundle exec rake db:setup     # setup database
    bundle exec rake test         # run tests
    bundle exec rake lint         # run linters

    bundle exec rake test:system  # run e2e tests
    bundle exec rake lint:all     # run all linters

    bundle exec rails s           # start the web server process
    bundle exec rake jobs:work    # start the worker process


=== Database

Captain's Log uses a single database, one that which this application need read
and write access to. The database and schema create by `rake db:setup` is the
one that external services use and require access to as well. These services
should only need read-only access.


=== Configuration

The application needs to know what database it should read and write from and
where the external services live:

    DATABASE_URL          # example postgres://postgres@host.docker.internal:5432/captainslog
    FITBIT_CLIENT_ID
    FITBIT_CLIENT_SECRET
    FITBIT_REDIRECT_URL   # example http://localhost:3000/connection/oauth/fitbit
    JAEGER_HOST           # example localhost
    JAEGER_PORT           # example 6831
    PROCESSOR_ADDRESS     # example http://host.docker.internal:8081
    QUERIER_ADDRESS       # example http://host.docker.internal:8082
    SPOTIFY_CLIENT_ID
    SPOTIFY_CLIENT_SECRET
    SPOTIFY_REDIRECT_URL  # example http://localhost:3000/connection/oauth/spotify


=== Container

    # build base image with rails application and all dependencies
    docker build -t minond/captainslog-ruby -f Dockerfile .

    # build and run server application
    docker build -t minond/captainslog-web -f Dockerfile.web .
    docker run -d --env-file .env --name cl-web -p 8080:3000 minond/captainslog-web

    # build and run worker application
    docker build -t minond/captainslog-worker -f Dockerfile.worker .
    docker run -d --env-file .env --name cl-worker minond/captainslog-worker

    # push to container repo
    docker push minond/captainslog-web:latest
    docker push minond/captainslog-worker:latest
