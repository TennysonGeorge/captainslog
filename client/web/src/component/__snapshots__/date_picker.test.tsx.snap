// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DatePicker (daily grouping) 1`] = `
<Component
  date={2019-08-18T02:51:07.888Z}
  grouping={1}
  onChange={[Function]}
>
  <DatePicker
    allowSameDay={false}
    dateFormat="MM/dd/yyyy"
    dateFormatCalendar="LLLL yyyy"
    disabled={false}
    disabledKeyboardNavigation={false}
    dropdownMode="scroll"
    inlineFocusSelectedMonth={false}
    monthsShown={1}
    nextMonthButtonLabel="Next month"
    onBlur={[Function]}
    onChange={[Function]}
    onClickOutside={[Function]}
    onFocus={[Function]}
    onInputClick={[Function]}
    onInputError={[Function]}
    onKeyDown={[Function]}
    onMonthChange={[Function]}
    onSelect={[Function]}
    onYearChange={[Function]}
    preventOpenOnFocus={false}
    previousMonthButtonLabel="Previous Month"
    readOnly={false}
    renderDayContents={[Function]}
    selected={2019-08-18T02:51:07.888Z}
    shouldCloseOnSelect={true}
    showMonthYearPicker={false}
    showTimeInput={false}
    showTimeSelect={false}
    strictParsing={false}
    timeCaption="Time"
    timeInputLabel="Time"
    timeIntervals={30}
    withPortal={false}
  >
    <PopperComponent
      hidePopper={true}
      popperComponent={null}
      popperModifiers={
        Object {
          "preventOverflow": Object {
            "boundariesElement": "viewport",
            "enabled": true,
            "escapeWithReference": true,
          },
        }
      }
      popperPlacement="bottom-start"
      popperProps={Object {}}
      targetComponent={
        <div
          className="react-datepicker__input-container"
        >
          <input
            className=""
            disabled={false}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            readOnly={false}
            type="text"
            value="08/17/2019"
          />
        </div>
      }
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <div
              className="react-datepicker-wrapper"
            >
              <div
                className="react-datepicker__input-container"
              >
                <input
                  className=""
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  readOnly={false}
                  type="text"
                  value="08/17/2019"
                />
              </div>
            </div>
          </InnerReference>
        </Reference>
      </Manager>
    </PopperComponent>
  </DatePicker>
  <Btn
    action={[Function]}
    label="Previous"
  >
    <input
      onClick={[Function]}
      type="button"
      value="Previous"
    />
  </Btn>
  <Btn
    action={[Function]}
    label="Next"
  >
    <input
      onClick={[Function]}
      type="button"
      value="Next"
    />
  </Btn>
  <Btn
    action={[Function]}
    label="Current"
  >
    <input
      onClick={[Function]}
      type="button"
      value="Current"
    />
  </Btn>
</Component>
`;

exports[`DatePicker (no grouping) 1`] = `
<Component
  date={2019-08-18T02:51:07.888Z}
  grouping={0}
  onChange={[Function]}
>
  <DatePicker
    allowSameDay={false}
    dateFormat="MM/dd/yyyy"
    dateFormatCalendar="LLLL yyyy"
    disabled={false}
    disabledKeyboardNavigation={false}
    dropdownMode="scroll"
    inlineFocusSelectedMonth={false}
    monthsShown={1}
    nextMonthButtonLabel="Next month"
    onBlur={[Function]}
    onChange={[Function]}
    onClickOutside={[Function]}
    onFocus={[Function]}
    onInputClick={[Function]}
    onInputError={[Function]}
    onKeyDown={[Function]}
    onMonthChange={[Function]}
    onSelect={[Function]}
    onYearChange={[Function]}
    preventOpenOnFocus={false}
    previousMonthButtonLabel="Previous Month"
    readOnly={false}
    renderDayContents={[Function]}
    selected={2019-08-18T02:51:07.888Z}
    shouldCloseOnSelect={true}
    showMonthYearPicker={false}
    showTimeInput={false}
    showTimeSelect={false}
    strictParsing={false}
    timeCaption="Time"
    timeInputLabel="Time"
    timeIntervals={30}
    withPortal={false}
  >
    <PopperComponent
      hidePopper={true}
      popperComponent={null}
      popperModifiers={
        Object {
          "preventOverflow": Object {
            "boundariesElement": "viewport",
            "enabled": true,
            "escapeWithReference": true,
          },
        }
      }
      popperPlacement="bottom-start"
      popperProps={Object {}}
      targetComponent={
        <div
          className="react-datepicker__input-container"
        >
          <input
            className=""
            disabled={false}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            readOnly={false}
            type="text"
            value="08/17/2019"
          />
        </div>
      }
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <div
              className="react-datepicker-wrapper"
            >
              <div
                className="react-datepicker__input-container"
              >
                <input
                  className=""
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  readOnly={false}
                  type="text"
                  value="08/17/2019"
                />
              </div>
            </div>
          </InnerReference>
        </Reference>
      </Manager>
    </PopperComponent>
  </DatePicker>
  <Btn
    action={[Function]}
    label="Previous"
  >
    <input
      onClick={[Function]}
      type="button"
      value="Previous"
    />
  </Btn>
  <Btn
    action={[Function]}
    label="Next"
  >
    <input
      onClick={[Function]}
      type="button"
      value="Next"
    />
  </Btn>
  <Btn
    action={[Function]}
    label="Current"
  >
    <input
      onClick={[Function]}
      type="button"
      value="Current"
    />
  </Btn>
</Component>
`;
